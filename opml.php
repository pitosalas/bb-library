<?php
// BlogBridge Library
// Copyright (c) 2006 Salas Associates, Inc.  All Rights Reserved.
//
// Use, modification or copying prohibited unless appropriately licensed
// under an express agreement with Salas Associates, Inc.
//
// Contact: R. Pito Salas
// Mail To: support@blogbridge.com
//
// $Id: opml.php,v 1.4 2006/12/12 10:25:14 alg Exp $
//

require_once 'functions.php';

function outputFolderOPML($opmlFolder)
{
	if (is_string($opmlFolder))
	{
		$opml = $opmlFolder;
	} else
	{
	    // Build OPML and output
	    $opml = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n";
	    $opml .= "<!-- Generated by BlogBridge Directory on ";
	    $opml .= date('D, d M Y H:i:s T') . " -->";
	    $opml .= "<opml version=\"1.1\" xmlns:bb=\"http://blogbridge.com/ns/2006/opml\">";
	    $opml .= "<head><title>" . htmlspecialchars($opmlFolder['text'], ENT_QUOTES, "UTF-8") . "</title></head>";
	    $opml .= "<body>";
	
	    foreach ($opmlFolder['children'] as $child)
	    {
	        $opml .= outputOutline($child);
	    }
	    
	    $opml .= "</body>";
	    $opml .= "</opml>";
	}
	        
    /* Output OPML */
    header("Content-type: text/x-opml");
    echo $opml;
}

/**
 * Recursively outputs outlines.
 */
function outputOutline($outline)
{
    $children = isset($outline['children']) ? $outline['children'] : array();
    $empty = count($children) == 0;
    
    $xml = "<outline";
    
    // Output attributes
    foreach ($outline as $name => $val)
    {
        if ($name != 'children')
        {
            $xml .= ' ' . $name . '="' . escape4HTML($val) . '"';
        }
    }
    
    // Output children
    if ($empty)
    {
        $xml .= '/>';
    } else
    {
        $xml .= '>';
        foreach ($children as $child) $xml .= outputOutline($child);
        $xml .= '</outline>';
    }
    
    return $xml;
}

// Parsing section ----------------------------------------------------------------------

require_once 'classes/OPMLParser.class.php';
require_once 'classes/httpclient/HttpClient.class.php';
require_once 'classes/Folder.class.php';
require_once 'classes/Item.class.php';

// Maximum number of levels of depth
define('MAX_OPML_FOLDER_LEVEL', 10);

// Type: Feed item
define('TYPE_ITEM', 0);
// Type: Folder node
define('TYPE_FOLDER', 1);
// Type: Included OPML
define('TYPE_INCLUSION', 2);
// Type: Unknown node type
define('TYPE_UNKNOWN', 3);

/**
 * Loads opml folder from OPML URL. Loads all included OPMLs that aren't mentioned
 * in $visited_urls and if the $level is less than MAX_OPML_FOLDER_LEVEL.
 */
function prepare_opml_folder($url, $userId, $level = -1, $visited_urls = array())
{
	$folder = null;

	if (!in_array($url, $visited_urls) && $level < MAX_OPML_FOLDER_LEVEL)
	{	
		$visited_urls[] = $url;

		$opmlStr = HttpClient::quickGet($url);
		if ($opmlStr != '')
		{
			$parser = new OPMLParser();
			$opml = $parser->parseString($opmlStr, true);
			$folder = outline_to_domain($opml, $userId, $level, $visited_urls);
			if ($folder != null) $folder = find_real_root($folder);
			if ($folder != null) $folder->opml = $opmlStr;			
		}
	}
		
	return $folder;
}

/**
 * Finds real root of the folder -- the place where there's at least one item or two or more folders.
 */
function find_real_root(&$folder)
{
	$root = &$folder;
	
	if (!isset($folder->children))
	{
		$root = null;
	} else if (count($folder->children) == 1 && is_a($folder->children[0], 'Folder'))
	{
		// If the only element of the folder is another folder,
		// go deeper
		$root = find_real_root($folder->children[0]);
	}
	
	return $root;
}

/**
 * Converts folder outline, leaf outline (feed) or included OPML into
 * the domain objects.
 */
function outline_to_domain(&$outline, $userId, $level, &$visited_urls)
{
	if ($level > MAX_OPML_FOLDER_LEVEL) return null;
	
	$type = get_outline_type($outline);
	
    if (isset($outline['HTMLURL'])) $siteURL = $outline['HTMLURL'];
    if (isset($outline['XMLURL'])) $dataURL = $outline['XMLURL'];
    if (!isset($dataURL) && isset($outline['URL'])) $dataURL = $outline['URL'];

	if ($type == TYPE_ITEM)
	{
		if (!isset($siteURL)) $siteURL = $dataURL;

		$obj = new Item();
		populate_object_title($obj, $outline);
        $obj->siteURL = $siteURL;
        $obj->dataURL = $dataURL;
        $obj->owner_id = $userId;
        $obj->type_id = 1;
        $obj->dynamic = 1;
        $obj->tags = outline_tags($outline);
	} else if ($type == TYPE_FOLDER)
	{
        // Folder
        $obj = new Folder();
        populate_folder_fields($obj, $outline, $userId, $level + 1);
        
        $obj->children = array();
		if (isset($outline['children']))
		{
	        foreach ($outline['children'] as $child)
	        {
	        	$chld = outline_to_domain($child, $userId, $level + 1, $visited_urls);
	        	if ($chld != null) $obj->children[] = $chld;
	        }
		}
		        
        if (count($obj->children) == 0) $obj = null;
	} else if ($type == TYPE_INCLUSION)
	{
		// Inclusion
		$obj = prepare_opml_folder($dataURL, $userId, $level + 1, $visited_urls);
        if (isset($obj))
        {
        	populate_folder_fields($obj, $outline, $userId, $level + 1);
        	$obj->opml_url = $dataURL;
        }
	} else $obj = null;	
	
	return $obj;
}

/**
 * Returns tags from the outline object if any present.
 */
function outline_tags(&$outline)
{
		return isset($outline['BB:TAGS'])
			? $outline['BB:TAGS']
			: (isset($outline['TAGS'])
				? $outline['TAGS']
				: null);
}

/**
 * Populates folder fields with data from the outline.
 */
function populate_folder_fields(&$obj, &$outline, $userId, $level)
{
	populate_object_title($obj, $outline);
    $obj->viewType_id = 1;
    $obj->owner_id = $userId;
    $obj->dynamic = $level > 0 ? 1 : 0;
    $obj->tags = outline_tags($outline);
}

function populate_object_title(&$obj, &$outline)
{
    if (isset($outline['TITLE'])) $title = $outline['TITLE'];
    if (isset($outline['TEXT'])) $text = $outline['TEXT'];
    if (isset($outline['DESCRIPTION'])) $description = $outline['DESCRIPTION'];
    
    if (isset($text))
    {
    	$obj->title = $text;
    	 
    	if (isset($title) && $title != $text)
    	{
	    	$obj->title = $title;
	    	$obj->description = $text;
    	}
    } else if (isset($title))
    {
		$obj->title = $title;
    }    	
}

/**
 * Detects the type of outline.
 */
function get_outline_type($outline)
{
	$type = TYPE_UNKNOWN;
	
	$type_name = null;
	if (isset($outline['TYPE'])) $type_name = strtolower($outline['TYPE']);
    if (isset($outline['XMLURL'])) $dataURL = $outline['XMLURL'];
    if (!isset($dataURL) && isset($outline['URL'])) $dataURL = $outline['URL'];
    
    if ($type_name == 'opml' || $type_name == 'include')
    {
    	// Inclusion
    	if (isset($dataURL)) $type = TYPE_INCLUSION;
    } else if ($type_name == 'rss' || (isset($dataURL) && isset($outline['HTMLURL'])))
    {
    	// RSS feed
    	if (isset($dataURL)) $type = TYPE_ITEM;
    } else if ($type_name == 'link')
    {
    	// Inclusion if has data URL ending with '.opml'
    	if (isset($dataURL) && eregi('\.opml$', $dataURL)) $type = TYPE_INCLUSION;
    } else
    {
    	// Folder
    	$type = TYPE_FOLDER;
    }
    
    return $type;
}

?>
